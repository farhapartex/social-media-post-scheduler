name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main


jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis:7.4-alpine
        options: --entrypoint "redis-server"
        ports:
          - 6380:6379
      db:
        image: postgres:13
        options: >-
          --health-cmd="pg_isready -U user"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: social_db
        ports:
          - "5433:5432"
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Docker
        uses: docker/setup-buildx-action@v2
      
      - name: Cache Docker Layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Install Docker Compose V2
        run: |
          mkdir -p $HOME/.docker/cli-plugins
          curl -SL https://github.com/docker/compose/releases/download/v2.20.0/docker-compose-linux-x86_64 -o $HOME/.docker/cli-plugins/docker-compose
          chmod +x $HOME/.docker/cli-plugins/docker-compose
          docker compose version
      - name: Build Docker Image
        run: |
          docker compose build
      - name: Start Docker Services
        run: |
          docker compose up -d
      - name: Health Check - FastAPI
        run: |
          for i in {1..5}; do
            echo "Checking FastAPI service... Attempt $i"
            if curl -f http://localhost:8000; then
              echo "FastAPI is up and running!"
              break
            else
              echo "FastAPI not ready yet. Retrying in 5 seconds..."
              sleep 5
            fi
          done
          if [ $? -ne 0 ]; then
            echo "FastAPI failed to start."
            exit 1
          fi
      - name: Check Celery Worker Logs
        run: |
          docker compose logs celery_worker
      
      - name: Run Tests
        run: |
          docker compose run tests

      - name: Stop & Clean all containers
        run: |
          docker compose down -v